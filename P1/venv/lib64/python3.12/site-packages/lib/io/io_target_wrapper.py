import os
from typing import Optional, Any


class IOTargetWrapper:
    """
    Useful utility class to abstract target parameter of `autobadger` main script.
    Enables to seed the target directory once for the program's execution.
    """

    _instance: Optional["IOTargetWrapper"] = None
    # target directory. Should only be used when storing a grading key in the project's root dir
    target: str
    path: str

    @classmethod
    def seed_target(cls, target: str):
        cls.__new__(cls, path=None, target=target)

    def __new__(cls, path: str | None = None, target: str | None = None):
        if cls._instance is None:
            cls._instance = super().__new__(cls)
            cls._instance.target = target if target is not None else "./"
        if path is not None:
            cls._instance.path = path
        return cls._instance

    def __fspath__(self):
        return (
            os.path.join(self.target, self.path)
            if self.path and self.target
            else "NOT INITIALIZED"
        )

    def __str__(self):
        return (
            os.path.join(self.target, self.path)
            if self.path and self.target
            else "NOT INITIALIZED"
        )

    def __repr__(self):
        return (
            f"IOWrapper({os.path.join(self.target, self.path)})"
            if self.path and self.target
            else "NOT INITIALIZED"
        )
